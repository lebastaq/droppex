// Code generated by protoc-gen-go. DO NOT EDIT.
// source: servrpc.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	servrpc.proto

It has these top-level messages:
	File
	Empty
	Query
	FileMetadata
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type File struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *File) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

// Return an error from controller if something went wrong
type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Query struct {
	Pattern string `protobuf:"bytes,1,opt,name=pattern" json:"pattern,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Query) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

type FileMetadata struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	FileSize int64  `protobuf:"varint,2,opt,name=fileSize" json:"fileSize,omitempty"`
}

func (m *FileMetadata) Reset()                    { *m = FileMetadata{} }
func (m *FileMetadata) String() string            { return proto.CompactTextString(m) }
func (*FileMetadata) ProtoMessage()               {}
func (*FileMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *FileMetadata) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileMetadata) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func init() {
	proto.RegisterType((*File)(nil), "main.File")
	proto.RegisterType((*Empty)(nil), "main.Empty")
	proto.RegisterType((*Query)(nil), "main.Query")
	proto.RegisterType((*FileMetadata)(nil), "main.FileMetadata")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PortalController service

type PortalControllerClient interface {
	// Forwards file deletion request from client
	DeleteFile(ctx context.Context, in *File, opts ...grpc.CallOption) (*Empty, error)
	// Forwards search query from Client
	// If there are multiple files that match the query, return them as a stream
	FileSearch(ctx context.Context, in *Query, opts ...grpc.CallOption) (PortalController_FileSearchClient, error)
}

type portalControllerClient struct {
	cc *grpc.ClientConn
}

func NewPortalControllerClient(cc *grpc.ClientConn) PortalControllerClient {
	return &portalControllerClient{cc}
}

func (c *portalControllerClient) DeleteFile(ctx context.Context, in *File, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/main.PortalController/DeleteFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalControllerClient) FileSearch(ctx context.Context, in *Query, opts ...grpc.CallOption) (PortalController_FileSearchClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PortalController_serviceDesc.Streams[0], c.cc, "/main.PortalController/FileSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &portalControllerFileSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PortalController_FileSearchClient interface {
	Recv() (*FileMetadata, error)
	grpc.ClientStream
}

type portalControllerFileSearchClient struct {
	grpc.ClientStream
}

func (x *portalControllerFileSearchClient) Recv() (*FileMetadata, error) {
	m := new(FileMetadata)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for PortalController service

type PortalControllerServer interface {
	// Forwards file deletion request from client
	DeleteFile(context.Context, *File) (*Empty, error)
	// Forwards search query from Client
	// If there are multiple files that match the query, return them as a stream
	FileSearch(*Query, PortalController_FileSearchServer) error
}

func RegisterPortalControllerServer(s *grpc.Server, srv PortalControllerServer) {
	s.RegisterService(&_PortalController_serviceDesc, srv)
}

func _PortalController_DeleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(File)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalControllerServer).DeleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.PortalController/DeleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalControllerServer).DeleteFile(ctx, req.(*File))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalController_FileSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Query)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PortalControllerServer).FileSearch(m, &portalControllerFileSearchServer{stream})
}

type PortalController_FileSearchServer interface {
	Send(*FileMetadata) error
	grpc.ServerStream
}

type portalControllerFileSearchServer struct {
	grpc.ServerStream
}

func (x *portalControllerFileSearchServer) Send(m *FileMetadata) error {
	return x.ServerStream.SendMsg(m)
}

var _PortalController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.PortalController",
	HandlerType: (*PortalControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteFile",
			Handler:    _PortalController_DeleteFile_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FileSearch",
			Handler:       _PortalController_FileSearch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "servrpc.proto",
}

func init() { proto.RegisterFile("servrpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xcd, 0x4e, 0xc3, 0x30,
	0x10, 0x84, 0x6b, 0x68, 0x29, 0x5d, 0x40, 0x42, 0x3e, 0x45, 0x39, 0xb5, 0xbe, 0xd0, 0x93, 0xc5,
	0xcf, 0x1b, 0xb4, 0xd0, 0x1b, 0x52, 0x48, 0x9f, 0x60, 0x49, 0xb7, 0x10, 0xc9, 0xb1, 0xad, 0x65,
	0x8b, 0x54, 0x9e, 0x1e, 0x39, 0x69, 0xc2, 0x8d, 0xdb, 0x8c, 0xc7, 0x3b, 0xfa, 0x76, 0xe1, 0xe6,
	0x8b, 0xf8, 0x9b, 0x63, 0x65, 0x23, 0x07, 0x09, 0x7a, 0xdc, 0x60, 0xed, 0x8d, 0x81, 0xf1, 0xa6,
	0x76, 0xa4, 0x73, 0xb8, 0xdc, 0xd7, 0x8e, 0x3c, 0x36, 0x94, 0xa9, 0xb9, 0x5a, 0xce, 0xca, 0xc1,
	0x9b, 0x29, 0x4c, 0x5e, 0x9a, 0x28, 0x47, 0xb3, 0x80, 0xc9, 0xdb, 0x81, 0xf8, 0xa8, 0x33, 0x98,
	0x46, 0x14, 0x21, 0xf6, 0xa7, 0xcf, 0xbd, 0x35, 0x1b, 0xb8, 0x4e, 0x7d, 0xaf, 0x24, 0xb8, 0x43,
	0xc1, 0xff, 0x7a, 0xfb, 0x6c, 0x5b, 0xff, 0x50, 0x76, 0x36, 0x57, 0xcb, 0xf3, 0x72, 0xf0, 0x8f,
	0x1e, 0x6e, 0x8b, 0xc0, 0x82, 0x6e, 0x1d, 0xbc, 0x70, 0x70, 0x8e, 0x58, 0xdf, 0x01, 0x3c, 0x93,
	0x23, 0xa1, 0x96, 0x18, 0x6c, 0x5a, 0xc0, 0x26, 0x9d, 0x5f, 0x75, 0xba, 0xa3, 0x1c, 0xe9, 0x07,
	0x80, 0xf4, 0xbc, 0x25, 0xe4, 0xea, 0x53, 0x9f, 0xc2, 0x96, 0x3c, 0xd7, 0x7f, 0x53, 0x3d, 0xa3,
	0x19, 0xdd, 0xab, 0xd5, 0x02, 0x74, 0x15, 0x1a, 0xbb, 0xaf, 0x0e, 0xd1, 0x7e, 0x90, 0x27, 0x46,
	0xa1, 0xdd, 0x6a, 0xd6, 0x31, 0x94, 0xc5, 0xba, 0x50, 0xef, 0x17, 0xed, 0xdd, 0x9e, 0x7e, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x89, 0x3e, 0x50, 0x4f, 0x48, 0x01, 0x00, 0x00,
}
